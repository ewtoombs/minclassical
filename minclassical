#!/usr/bin/env python


def geturl(channel):
    """Connects to zoomermedia.ca to get the stream URL for a 
    particular radio station it serves."""

    import asyncio
    import websockets
    import requests
    import json
    import re

    # The common piece shared between the websocket and HTTP URLs.
    urlcommon = '://nowplay.zoomermedia.ca/socket.io/?transport='

    # Start session.
    basehttpurl = 'http'+urlcommon+'polling'
    response = requests.get(basehttpurl)
    c = response.content[5:]
    sid = json.loads(c)['sid']

    # Request which channel we want.
    sessionurl = basehttpurl + '&sid=' + sid
    requestj = [
            'action',
            {
                'type': 'server/registerChannel',
                'channel': channel
            }
        ]
    request = '42' + json.dumps(requestj)
    response = requests.post(sessionurl,
            data='{}:{}'.format(len(request), request))
    assert response.content == b'ok'


    # Get URL from websocket.
    async def hello():
        async with websockets.connect(
                'ws'+urlcommon+'websocket&sid='+sid) as ws:
            await ws.send('2probe')
            await ws.recv()
            await ws.send('5')

            pattern = re.compile('(\d+)(.*)')
            while True:
                d = await ws.recv()
                match = pattern.fullmatch(d)
                status = int(match.group(1))
                if status != 42:
                    continue

                j = json.loads(match.group(2))
                action = j[1]
                if action['type'] == 'client/streamData':
                    return action['data']['stream']['urls'][0]

    return asyncio.get_event_loop().run_until_complete(hello())


import subprocess as sp
from sys import *

r = sp.call(['mpv', geturl('www.classicalfm.ca')])
exit(r)
